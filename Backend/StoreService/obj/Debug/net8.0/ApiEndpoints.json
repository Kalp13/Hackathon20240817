[
  {
    "ContainingType": "StoreService.Endpoints.ProductsEndpoint\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoints\u003Eb__0_2",
    "RelativePath": "products/create",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "StoreService.Models.Request.Products\u002BProductsCreateRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 201
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 401
      }
    ],
    "Tags": [
      "2: Products"
    ]
  },
  {
    "ContainingType": "StoreService.Endpoints.ProductsEndpoint\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoints\u003Eb__0_4",
    "RelativePath": "products/delete",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 401
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ],
    "Tags": [
      "2: Products"
    ]
  },
  {
    "ContainingType": "StoreService.Endpoints.ProductsEndpoint\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoints\u003Eb__0_0",
    "RelativePath": "products/list",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "StoreService.Models.Request.Products\u002BProductsListRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "StoreService.Models.Response.Products\u002BProductsListResponse",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "2: Products"
    ]
  },
  {
    "ContainingType": "StoreService.Endpoints.ProductsEndpoint\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoints\u003Eb__0_5",
    "RelativePath": "products/list/random",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "StoreService.Models.Response.Products\u002BProductsListResponse",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "2: Products"
    ]
  },
  {
    "ContainingType": "StoreService.Endpoints.ProductsEndpoint\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoints\u003Eb__0_1",
    "RelativePath": "products/single",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "StoreService.Models.Response.Products\u002BProductsSingleResponse",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ],
    "Tags": [
      "2: Products"
    ]
  },
  {
    "ContainingType": "StoreService.Endpoints.ProductsEndpoint\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoints\u003Eb__0_3",
    "RelativePath": "products/update",
    "HttpMethod": "PATCH",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "StoreService.Models.Request.Products\u002BProductsUpdateRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 401
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 404
      }
    ],
    "Tags": [
      "2: Products"
    ]
  },
  {
    "ContainingType": "StoreService.Endpoints.PurchaseEndpoint\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoints\u003Eb__0_0",
    "RelativePath": "purchase/create",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "StoreService.Models.Request.Purchase\u002BPurchaseCreateRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "StoreService.Models.Response.Purchase\u002BPurchaseCreateResponse",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 401
      }
    ],
    "Tags": [
      "3: Purchase"
    ]
  },
  {
    "ContainingType": "StoreService.Endpoints.PurchaseEndpoint\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoints\u003Eb__0_1",
    "RelativePath": "purchase/list",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[StoreService.Models.Response.Purchase\u002BPurchaseListResponse, StoreService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 401
      }
    ],
    "Tags": [
      "3: Purchase"
    ]
  },
  {
    "ContainingType": "StoreService.Endpoints.TagsEndpoint\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoints\u003Eb__0_0",
    "RelativePath": "tags/list",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[StoreService.Models.Response.Tags\u002BTagsListResponse, StoreService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "1: Tags"
    ]
  },
  {
    "ContainingType": "StoreService.Endpoints.UserEndpoint\u002B\u003C\u003Ec",
    "Method": "\u003CMapEndpoints\u003Eb__0_1",
    "RelativePath": "users/list",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[StoreService.Models.Response.Users\u002BUsersResponse, StoreService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Collections.Generic.List\u00601[[StoreService.Models.Response.Users\u002BUsersResponse, StoreService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 401
      }
    ],
    "Tags": [
      "0: Users"
    ]
  },
  {
    "ContainingType": "StoreService.Endpoints.UserEndpoint\u002B\u003C\u003Ec__DisplayClass0_0",
    "Method": "\u003CMapEndpoints\u003Eb__0",
    "RelativePath": "users/login",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "StoreService.Models.Request.Users\u002BLoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "StoreService.Models.Response.Users\u002BLoginResponse",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 401
      }
    ],
    "Tags": [
      "0: Users"
    ]
  }
]